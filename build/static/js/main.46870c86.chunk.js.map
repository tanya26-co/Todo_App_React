{"version":3,"sources":["popup/Create.js","popup/UpdateTask.js","Components/Task.js","Components/Todolist.js","App.js","index.js"],"names":["Create","modal","toggle","save","useState","taskName","setTaskName","des","setDes","handleChange","e","target","name","value","Modal","isOpen","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","preventDefault","tasks","UpdateTask","updateTask","taskObj","description","setDescription","useEffect","Name","Description","tempObj","Task","index","deleteTask","updateTaskEdit","setModal","colors","primaryColor","secondaryColor","style","Des","obj","Todolist","taskarry","setTaskList","list","localStorage","getItem","JSON","parse","tempTask","splice","setItem","stringify","window","location","reload","map","tObj","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46870c86.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst Create = ({ modal, toggle, save }) => {\nconst [taskName, setTaskName] = useState('');\nconst [des, setDes] = useState('');\n\nconst handleChange = (e) => {\n   \n    const {name, value} =e.target\n\n    if(name === \"taskName\"){\n        setTaskName(value)\n    }\n    else{\n        setDes(value)\n    }\n}\n\nconst handleSave = (e) => {\n    e.preventDefault()\nlet tasks = {}\ntasks[\"Name\"] = taskName\ntasks[\"Des\"] = des\nsave(tasks)\n\n}\n\n    return (\n        <div>\n            <Modal isOpen={modal} toggle={toggle} >\n                <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n                <ModalBody>\n                    <form>\n                         <div className = \"form-group\">\n                             <label>Task Name</label>\n                             <input type = \"text\" className=\"form-control\" name = \"taskName\" value = { taskName} onChange= { handleChange} />\n                         </div>\n                         <div className = \"form-group\">\n                           <label>Description</label>\n                           <textarea rows = \"4\" className=\"form-control\" name = \"des\" value = { des } onChange= { handleChange} ></textarea>\n                         </div>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Create;","import React, {useState, useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst UpdateTask = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n        <ModalBody>\n        \n                <div className = \"form-group\">\n                    <label>Task Name</label>\n                    <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                </div>\n                <div className = \"form-group\">\n                    <label>Description</label>\n                    <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                </div>\n            \n        </ModalBody>\n        <ModalFooter>\n        <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n  </Modal>\n    );\n};\n\nexport default UpdateTask;","import React, {useState} from 'react';\nimport UpdateTask from '../popup/UpdateTask';\nconst Task = ({taskObj, index, deleteTask, updateTaskEdit}) => {\n    const [modal, setModal ] = useState(false);\n    const colors = [\n        {\n            primaryColor : \"#5D93E1\",\n            secondaryColor : \"#ECF3FC\"\n        },\n       {\n            primaryColor : \"#5DC250\",\n            secondaryColor : \"#F2FAF1\"\n        },\n        {\n            primaryColor : \"#F48687\",\n            secondaryColor : \"#FDF1F1\"\n        },\n        {\n            primaryColor : \"#B964F7\",\n            secondaryColor : \"#F3F0FD\"\n        },\n        {\n            primaryColor : \"#F9D288\",\n            secondaryColor : \"#FEFAF1\"\n        }\n    ]\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const updateTask = (obj) => {\n        updateTaskEdit(obj, index)\n    }\n\n    const handleDelete = () => {\n        deleteTask(index)\n    }\n\n    return (\n        <div className = \"row\">\n        <div className = \"card-wrapper \">\n            \n            <div className  = \"card-top \" style={{\"backgroundColor\": colors[index%5].primaryColor}}></div>\n            <div className = \"task-holder\">\n                <span className  = \"card-header\" style={{\"backgroundColor\": colors[index%5].secondaryColor, \"borderRadius\": \"10px\"}}>{taskObj.Name}</span>\n                <p className = \"mt-3\">{taskObj.Des}</p>\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}>\n                    <button className = \"far \" style={{\"color\" : colors[index%5].primaryColor, \"borderColor\": colors[index%5].primaryColor}} onClick = {() => setModal(true)}>Edit</button>\n                    <button className =\"bi \" style = {{\"color\" : colors[index%5].primaryColor, \"borderColor\": colors[index%5].primaryColor}} onClick = {handleDelete}>Delete</button>\n                </div>\n        </div>\n        </div>\n        <UpdateTask modal = {modal} toggle = {toggle} updateTask= {updateTask} taskObj = {taskObj}/>\n        </div>\n    );\n};\n\nexport default Task;","import React, {useEffect, useState} from 'react';\nimport Create from '../popup/Create'\nimport Task from './Task';\n\nconst Todolist = () => {\n    const [modal, setModal] = useState(false);\n    const [taskarry, setTaskList] = useState([]);\n\n    useEffect(() => {\n        let list =localStorage.getItem(\"taskarry\")\n\n        if(list){\n            let obj = JSON.parse(list)\n            setTaskList(obj)\n        }\n    }, [])\n\n    const deleteTask = (index) => {\n        let tempTask = taskarry\n        tempTask.splice(index, 1)\n        localStorage.setItem(\"taskarry\", JSON.stringify(tempTask))\n        setTaskList(tempTask)\n        window.location.reload()\n    }\n\n    const updateTaskEdit = (obj, index) => {\n        let tempTask = taskarry\n        tempTask[index] = obj\n        localStorage.setItem(\"taskarry\", JSON.stringify(tempTask))\n        setTaskList(tempTask)\n        window.location.reload()\n    }\n\n    const toggle = () => {\n        setModal ( !modal );\n    }\n\n    const saveTask =(tObj) => {\n        let tempTask = taskarry\n        tempTask.push(tObj)\n        localStorage.setItem(\"taskarry\", JSON.stringify(tempTask))\n        setTaskList(tempTask)\n        setModal( false )\n    }\n\n    return (\n       <> <div className = \"header text-center \">\n            <h3 > Todo List </h3>\n            <button className=\"btn btn-primary mt-2\" onClick = {() => setModal(true)}> Create Task</button>\n        </div>\n        \n        <div className = \"task\">\n        {taskarry && taskarry.map((obj , index) => <Task taskObj = {obj} index = {index} deleteTask = {deleteTask} updateTaskEdit= {updateTaskEdit}/> )}\n\n        </div>\n        <Create toggle = {toggle} modal = {modal} save = {saveTask} />\n        </>\n    );\n};\n\nexport default Todolist;","\nimport './App.css';\nimport TodoList from './Components/Todolist'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nfunction App() {\n  return (\n    <div className = \"App\">\n        <TodoList />\n    </div>\n  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}